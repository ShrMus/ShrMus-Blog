<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shrmus.blog.mapper.BlogLeaveMessageMapper">
  <resultMap id="BaseResultMap" type="cn.shrmus.blog.pojo.BlogLeaveMessage">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="message_pid" jdbcType="INTEGER" property="messagePid" />
    <result column="message_isreply" jdbcType="INTEGER" property="messageIsreply" />
    <result column="user_id_author" jdbcType="INTEGER" property="userIdAuthor" />
    <result column="user_id_reply" jdbcType="INTEGER" property="userIdReply" />
    <result column="message_publish_time" jdbcType="TIMESTAMP" property="messagePublishTime" />
    <association property="blogUser" column="user_id" select="cn.shrmus.blog.mapper.BlogUserMapper.getUserByUserId" />
    <association property="blogUserAuthor" column="user_id_author" select="cn.shrmus.blog.mapper.BlogUserMapper.getUserByUserId" />
    <association property="blogUserReply" column="user_id_reply" select="cn.shrmus.blog.mapper.BlogUserMapper.getUserByUserId" />
    <association property="messagesList" column="message_id" select="cn.shrmus.blog.mapper.BlogLeaveMessageMapper.selectByMessageId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.shrmus.blog.pojo.BlogLeaveMessage">
    <result column="message_content" jdbcType="LONGVARCHAR" property="messageContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, user_id, message_pid, message_isreply, user_id_author, 
    user_id_reply, message_publish_time
  </sql>
  <sql id="Blob_Column_List">
    message_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_leave_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_leave_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_leave_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_leave_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessageExample">
    delete from blog_leave_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessage">
    insert into blog_leave_message (message_id, user_id, message_pid, 
      message_isreply, user_id_author, 
      user_id_reply, message_publish_time, message_content
      )
    values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{messagePid,jdbcType=INTEGER}, 
      #{messageIsreply,jdbcType=INTEGER}, #{userIdAuthor,jdbcType=INTEGER}, 
      #{userIdReply,jdbcType=INTEGER}, #{messagePublishTime,jdbcType=TIMESTAMP}, #{messageContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessage">
    insert into blog_leave_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="messagePid != null">
        message_pid,
      </if>
      <if test="messageIsreply != null">
        message_isreply,
      </if>
      <if test="userIdAuthor != null">
        user_id_author,
      </if>
      <if test="userIdReply != null">
        user_id_reply,
      </if>
      <if test="messagePublishTime != null">
        message_publish_time,
      </if>
      <if test="messageContent != null">
        message_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messagePid != null">
        #{messagePid,jdbcType=INTEGER},
      </if>
      <if test="messageIsreply != null">
        #{messageIsreply,jdbcType=INTEGER},
      </if>
      <if test="userIdAuthor != null">
        #{userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="userIdReply != null">
        #{userIdReply,jdbcType=INTEGER},
      </if>
      <if test="messagePublishTime != null">
        #{messagePublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageContent != null">
        #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessageExample" resultType="java.lang.Long">
    select count(*) from blog_leave_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_leave_message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.messagePid != null">
        message_pid = #{record.messagePid,jdbcType=INTEGER},
      </if>
      <if test="record.messageIsreply != null">
        message_isreply = #{record.messageIsreply,jdbcType=INTEGER},
      </if>
      <if test="record.userIdAuthor != null">
        user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="record.userIdReply != null">
        user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      </if>
      <if test="record.messagePublishTime != null">
        message_publish_time = #{record.messagePublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.messageContent != null">
        message_content = #{record.messageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_leave_message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      message_pid = #{record.messagePid,jdbcType=INTEGER},
      message_isreply = #{record.messageIsreply,jdbcType=INTEGER},
      user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      message_publish_time = #{record.messagePublishTime,jdbcType=TIMESTAMP},
      message_content = #{record.messageContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_leave_message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      message_pid = #{record.messagePid,jdbcType=INTEGER},
      message_isreply = #{record.messageIsreply,jdbcType=INTEGER},
      user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      message_publish_time = #{record.messagePublishTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessage">
    update blog_leave_message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messagePid != null">
        message_pid = #{messagePid,jdbcType=INTEGER},
      </if>
      <if test="messageIsreply != null">
        message_isreply = #{messageIsreply,jdbcType=INTEGER},
      </if>
      <if test="userIdAuthor != null">
        user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="userIdReply != null">
        user_id_reply = #{userIdReply,jdbcType=INTEGER},
      </if>
      <if test="messagePublishTime != null">
        message_publish_time = #{messagePublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="messageContent != null">
        message_content = #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessage">
    update blog_leave_message
    set user_id = #{userId,jdbcType=INTEGER},
      message_pid = #{messagePid,jdbcType=INTEGER},
      message_isreply = #{messageIsreply,jdbcType=INTEGER},
      user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{userIdReply,jdbcType=INTEGER},
      message_publish_time = #{messagePublishTime,jdbcType=TIMESTAMP},
      message_content = #{messageContent,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shrmus.blog.pojo.BlogLeaveMessage">
    update blog_leave_message
    set user_id = #{userId,jdbcType=INTEGER},
      message_pid = #{messagePid,jdbcType=INTEGER},
      message_isreply = #{messageIsreply,jdbcType=INTEGER},
      user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{userIdReply,jdbcType=INTEGER},
      message_publish_time = #{messagePublishTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByMessageId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_leave_message
    where message_pid = #{message_id,jdbcType=INTEGER} 
    order by message_id asc 
  </select>
</mapper>