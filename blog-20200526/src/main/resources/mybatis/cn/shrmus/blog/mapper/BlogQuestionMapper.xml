<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shrmus.blog.mapper.BlogQuestionMapper">
  <resultMap id="BaseResultMap" type="cn.shrmus.blog.pojo.BlogQuestion">
    <id column="question_id" jdbcType="INTEGER" property="questionId" />
    <result column="question_pid" jdbcType="INTEGER" property="questionPid" />
    <result column="user_id_author" jdbcType="INTEGER" property="userIdAuthor" />
    <result column="user_id_reply" jdbcType="INTEGER" property="userIdReply" />
    <result column="question_title" jdbcType="VARCHAR" property="questionTitle" />
    <result column="question_publish_time" jdbcType="TIMESTAMP" property="questionPublishTime" />
    <result column="question_integral" jdbcType="INTEGER" property="questionIntegral" />
    <result column="question_accpeted" jdbcType="INTEGER" property="questionAccpeted" />
     <association property="blogUserAuthor" column="user_id_author" select="cn.shrmus.blog.mapper.BlogUserMapper.getUserByUserId" />
    <association property="blogUserReply" column="user_id_reply" select="cn.shrmus.blog.mapper.BlogUserMapper.getUserByUserId" />
    <association property="questionList" column="question_id" select="cn.shrmus.blog.mapper.BlogQuestionMapper.selectByQuestionId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.shrmus.blog.pojo.BlogQuestion">
    <result column="question_content" jdbcType="LONGVARCHAR" property="questionContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, question_pid, user_id_author, user_id_reply, question_title, question_publish_time, 
    question_integral, question_accpeted
  </sql>
  <sql id="Blob_Column_List">
    question_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.shrmus.blog.pojo.BlogQuestionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.shrmus.blog.pojo.BlogQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause} 
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shrmus.blog.pojo.BlogQuestionExample">
    delete from blog_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shrmus.blog.pojo.BlogQuestion">
    insert into blog_question (question_id, question_pid, user_id_author, 
      user_id_reply, question_title, question_publish_time, 
      question_integral, question_accpeted, question_content
      )
    values (#{questionId,jdbcType=INTEGER}, #{questionPid,jdbcType=INTEGER}, #{userIdAuthor,jdbcType=INTEGER}, 
      #{userIdReply,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{questionPublishTime,jdbcType=TIMESTAMP}, 
      #{questionIntegral,jdbcType=INTEGER}, #{questionAccpeted,jdbcType=INTEGER}, #{questionContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.shrmus.blog.pojo.BlogQuestion">
    insert into blog_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="questionPid != null">
        question_pid,
      </if>
      <if test="userIdAuthor != null">
        user_id_author,
      </if>
      <if test="userIdReply != null">
        user_id_reply,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="questionPublishTime != null">
        question_publish_time,
      </if>
      <if test="questionIntegral != null">
        question_integral,
      </if>
      <if test="questionAccpeted != null">
        question_accpeted,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="questionPid != null">
        #{questionPid,jdbcType=INTEGER},
      </if>
      <if test="userIdAuthor != null">
        #{userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="userIdReply != null">
        #{userIdReply,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionPublishTime != null">
        #{questionPublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionIntegral != null">
        #{questionIntegral,jdbcType=INTEGER},
      </if>
      <if test="questionAccpeted != null">
        #{questionAccpeted,jdbcType=INTEGER},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shrmus.blog.pojo.BlogQuestionExample" resultType="java.lang.Long">
    select count(*) from blog_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.questionPid != null">
        question_pid = #{record.questionPid,jdbcType=INTEGER},
      </if>
      <if test="record.userIdAuthor != null">
        user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="record.userIdReply != null">
        user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      </if>
      <if test="record.questionTitle != null">
        question_title = #{record.questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.questionPublishTime != null">
        question_publish_time = #{record.questionPublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.questionIntegral != null">
        question_integral = #{record.questionIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.questionAccpeted != null">
        question_accpeted = #{record.questionAccpeted,jdbcType=INTEGER},
      </if>
      <if test="record.questionContent != null">
        question_content = #{record.questionContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      question_pid = #{record.questionPid,jdbcType=INTEGER},
      user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      question_publish_time = #{record.questionPublishTime,jdbcType=TIMESTAMP},
      question_integral = #{record.questionIntegral,jdbcType=INTEGER},
      question_accpeted = #{record.questionAccpeted,jdbcType=INTEGER},
      question_content = #{record.questionContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      question_pid = #{record.questionPid,jdbcType=INTEGER},
      user_id_author = #{record.userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{record.userIdReply,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      question_publish_time = #{record.questionPublishTime,jdbcType=TIMESTAMP},
      question_integral = #{record.questionIntegral,jdbcType=INTEGER},
      question_accpeted = #{record.questionAccpeted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shrmus.blog.pojo.BlogQuestion">
    update blog_question
    <set>
      <if test="questionPid != null">
        question_pid = #{questionPid,jdbcType=INTEGER},
      </if>
      <if test="userIdAuthor != null">
        user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      </if>
      <if test="userIdReply != null">
        user_id_reply = #{userIdReply,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionPublishTime != null">
        question_publish_time = #{questionPublishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="questionIntegral != null">
        question_integral = #{questionIntegral,jdbcType=INTEGER},
      </if>
      <if test="questionAccpeted != null">
        question_accpeted = #{questionAccpeted,jdbcType=INTEGER},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.shrmus.blog.pojo.BlogQuestion">
    update blog_question
    set question_pid = #{questionPid,jdbcType=INTEGER},
      user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{userIdReply,jdbcType=INTEGER},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_publish_time = #{questionPublishTime,jdbcType=TIMESTAMP},
      question_integral = #{questionIntegral,jdbcType=INTEGER},
      question_accpeted = #{questionAccpeted,jdbcType=INTEGER},
      question_content = #{questionContent,jdbcType=LONGVARCHAR}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shrmus.blog.pojo.BlogQuestion">
    update blog_question
    set question_pid = #{questionPid,jdbcType=INTEGER},
      user_id_author = #{userIdAuthor,jdbcType=INTEGER},
      user_id_reply = #{userIdReply,jdbcType=INTEGER},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_publish_time = #{questionPublishTime,jdbcType=TIMESTAMP},
      question_integral = #{questionIntegral,jdbcType=INTEGER},
      question_accpeted = #{questionAccpeted,jdbcType=INTEGER}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  
   <select id="selectByQuestionId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_question
    where question_pid = #{questionId,jdbcType=INTEGER} 
    order by question_id asc
  </select>
</mapper>